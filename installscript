#!/bin/bash

# Hide "last login" line when starting a new terminal session
touch $HOME/.hushlogin

# Install zsh
echo 'Install oh-my-zsh'
echo '-----------------'
rm -rf $HOME/.oh-my-zsh
curl -L https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh

# Add global gitignore
ln -s $HOME/.dotfiles/shell/.global-gitignore $HOME/.global-gitignore
git config --global core.excludesfile $HOME/.global-gitignore

# Symlink zsh prefs
rm $HOME/.zshrc
ln -s $HOME/.dotfiles/shell/.zshrc $HOME/.zshrc

# Activate z
cd ~/.dotfiles/shell
chmod +x z.sh

echo 'Configure npm'
echo '-------------'
# Create a directory for global packages and tell npm where to store globally installed packages
mkdir "${HOME}/.npm-packages"
npm config set prefix "${HOME}/.npm-packages"

echo 'Install homebrew'
echo '----------------'
echo install homebrew
sudo rm -rf /usr/local/Cellar /usr/local/.git && brew cleanup
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> /Users/ishan/.zprofile
eval "$(/opt/homebrew/bin/brew shellenv)"

echo 'Install VS Code'
echo '---------------'
brew install --cask visual-studio-code
echo 'Configure VS Code'
echo '-----------------'
# Symlink settings.json
rm $HOME/Library/Application\ Support/Code/User/settings.json
ln -s $HOME/.dotfiles/vscode/settings.json $HOME/Library/Application\ Support/Code/User/settings.json
# Symlink keybindings.json
rm $HOME/Library/Application\ Support/Code/User/keybindings.json
ln -s $HOME/.dotfiles/vscode/keybindings.json $HOME/Library/Application\ Support/Code/User/keybindings.json
# Symlink snippets
rm -rf $HOME/Library/Application\ Support/Code/User/snippets
ln -s $HOME/.dotfiles/vscode/snippets $HOME/Library/Application\ Support/Code/User/snippets

echo 'Install node'
echo '------------'
brew install node

echo 'Install pkg-config'
echo '------------------'
brew install pkg-config

echo 'Install wget'
echo '------------'
brew install wget

echo 'Install ack'
echo '-----------'
brew install ack

echo 'Install warp terminal'
echo '---------------------'
brew install --cask warp

echo 'Install php'
echo '-----------'
brew tap shivammathur/php
brew install shivammathur/php/php@8.1
brew link --overwrite --force php@8.1

echo 'Install composer'
echo '----------------'
EXPECTED_COMPOSER_CHECKSUM="$(curl https://composer.github.io/installer.sig)"
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
ACTUAL_COMPOSER_CHECKSUM="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"
if [ "$EXPECTED_COMPOSER_CHECKSUM" != "$ACTUAL_COMPOSER_CHECKSUM" ]
then
    >&2 echo 'ERROR: Invalid installer checksum'
    rm composer-setup.php
    exit 1
fi
php composer-setup.php
rm composer-setup.php
sudo mkdir /usr/local/bin/
sudo mv composer.phar /usr/local/bin/composer

echo 'Install imagemagick'
echo '-------------------'
brew install imagemagick

echo 'Install imagick'
echo '---------------'
pecl install imagick

echo 'Install xdebug'
echo '--------------'
pecl install xdebug

echo 'Install mysql'
echo '-------------'
brew install mysql
brew services start mysql

echo 'Install zsh-autosuggestions'
echo '---------------------------'
brew install zsh-autosuggestions

echo 'Install rectangle'
echo '-----------------'
brew install --cask rectangle

echo 'Install raycast'
echo '---------------'
brew install --cask raycast

echo 'Install tableplus'
echo '-----------------'
brew install --cask tableplus

echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
echo 'All done!'

echo '++++++++++++++++++++++++++++++'
echo 'Configure MySQL:'
echo 'Run `mysql_secure_installation` command to secure the installation'

echo '++++++++++++++++++++++++++++++'
echo 'Some optional tidbits:'
echo 'Make a .dotfiles-custom/shell/.aliases for your personal commands'

echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
